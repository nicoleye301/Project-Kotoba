<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.server.mapper.FriendshipMapper">

    <!-- Result map for Friendship entity -->
    <resultMap id="FriendshipResultMap" type="com.example.server.entity.Friendship">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="friendId" column="friend_id"/>
        <result property="nickname" column="nickname"/>
        <result property="directChatGroupId" column="direct_chat_group_id"/>
        <result property="status" column="status"/>
    </resultMap>

    <!-- Insert a new friendship record -->
    <insert id="insert" parameterType="com.example.server.entity.Friendship">
        INSERT INTO friendship (user_id, friend_id, nickname, direct_chat_group_id, status)
        VALUES (#{userId}, #{friendId}, #{nickname}, #{directChatGroupId}, #{status})
    </insert>

    <!-- Update an existing friendship record -->
    <update id="update" parameterType="com.example.server.entity.Friendship">
        UPDATE friendship
        SET nickname = #{nickname},
            direct_chat_group_id = #{directChatGroupId},
            status = #{status}
        WHERE user_id = #{userId} AND friend_id = #{friendId}
    </update>
    <update id="updateMilestoneSettings">
        UPDATE friendship SET milestone_settings = #{milestoneSettings} where friend_id=#{friendShipId}
    </update>

    <!-- Select a friendship record by userId and friendId -->
    <select id="selectByUserIdAndFriendId" parameterType="map" resultMap="FriendshipResultMap">
        SELECT * FROM friendship
        WHERE user_id = #{userId} AND friend_id = #{friendId}
    </select>

    <!-- Select all friendship records where the user is either requester or receiver -->
    <select id="selectFriendshipsByUser" parameterType="java.lang.Integer" resultMap="FriendshipResultMap">
        SELECT * FROM friendship
        WHERE user_id = #{userId} and status = 'accepted'
    </select>

    <!-- Select pending friend requests for the given receiver -->
    <select id="selectPendingForReceiver" parameterType="java.lang.Integer" resultMap="FriendshipResultMap">
        SELECT *
        FROM friendship
        WHERE friend_id = #{receiverId}
          AND status = 'pending'
    </select>

    <select id="selectByFriendshipId" resultType="com.example.server.entity.Friendship">
        SELECT * FROM friendship WHERE id = #{id}
    </select>

    <!-- Delete a friendship record -->
    <delete id="delete" parameterType="com.example.server.entity.Friendship">
        DELETE FROM friendship
        WHERE user_id = #{userId} AND friend_id = #{friendId}
    </delete>
</mapper>
