<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.server.mapper.PostLikeMapper">

    <resultMap id="PostLikeResultMap" type="com.example.server.entity.PostLike">
        <id property="id" column="id"/>
        <result property="postId" column="post_id"/>
        <result property="senderId" column="sender_id"/>
        <result property="content" column="content"/>
    </resultMap>

    <insert id="insertPostLike" parameterType="com.example.server.entity.PostLike">
        INSERT INTO post_like (post_id, sender_id, content)
        VALUES (#{postId}, #{senderId}, #{content})
    </insert>

    <update id="updatePostLike" parameterType="com.example.server.entity.PostLike">
        UPDATE post_like
        SET content = #{content}
        WHERE post_id = #{postId} AND sender_id = #{senderId}
    </update>

    <select id="selectLikesByPostId" resultMap="PostLikeResultMap">
        SELECT id, post_id, sender_id, content
        FROM post_like
        WHERE post_id = #{postId}
        ORDER BY id ASC
    </select>

    <select id="selectLikeByPostIdAndSenderId" resultMap="PostLikeResultMap">
        SELECT id, post_id, sender_id, content
        FROM post_like
        WHERE post_id = #{postId} AND sender_id = #{senderId}
    </select>

    <delete id="deleteLikeByPostIdAndSenderId" parameterType="com.example.server.entity.PostLike">
        DELETE
        FROM post_like
        WHERE post_id = #{postId} AND sender_id = #{senderId}
    </delete>

</mapper>
